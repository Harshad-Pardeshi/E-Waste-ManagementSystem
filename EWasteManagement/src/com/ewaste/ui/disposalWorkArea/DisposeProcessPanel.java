/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ewaste.ui.disposalWorkArea;

import com.ewaste.business.helper.Constant;
import com.ewaste.business.network.AirPollutionSensor;
import com.ewaste.business.network.Network;
import com.ewaste.business.network.RegionNode;
import com.ewaste.business.network.WaterPollutionSensor;
import com.ewaste.business.organization.DisposalOrganization;
import com.ewaste.business.useraccount.UserAccount;
import com.ewaste.business.workqueue.DisposalWorkRequest;
import java.awt.CardLayout;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author varsha bhanushali
 */
public class DisposeProcessPanel extends javax.swing.JPanel {

    /**
     * Creates new form DisposeProcessPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private DisposalOrganization disposalOrganization;
    private DisposalWorkRequest disposalrequest;
    private Network network;
    
            
    public DisposeProcessPanel(JPanel userProcessContainer, UserAccount userAccount, DisposalOrganization disposalOrganization, DisposalWorkRequest request, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount=userAccount;
        this.disposalOrganization = disposalOrganization;
        this.disposalrequest = request;
        this.network = network;
        populateTree();
    }

    private void  populateTree(){
        
        treeRegion.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        
        DefaultTreeModel defaultTreeModel = (DefaultTreeModel) treeRegion.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) defaultTreeModel.getRoot();
        root.removeAllChildren();
        root.add(network.getRegionNode());
        defaultTreeModel.reload();
    }
    

    
    public String[] getComponent(String componentType)
    {
        String[] component = new String[5];
        if(componentType.equalsIgnoreCase("Plastic waste"))
        {
            component[0] = "Keyboard";
            component[1] = "Electronic casing";
            component[2] = "Front or real panel";
            component[3] = "Printer";
            component[4] = "Monitor";
        }
        
        if(componentType.equalsIgnoreCase("Liquid waste"))
        {
            component[0] = "Fats, oil and Grease (FOG)";
            component[1] = "Waste Water";
            component[2] = "Alkaline, Paint";
            component[3] = "Dyes, Resins and Ink";
            component[4] = "Adhesives";
        }
        
        if(componentType.equalsIgnoreCase("Printed Circuit "))
        {
            component[0] = "Capacitors";
            component[1] = "Switches";
            component[2] = "Audio sockets";
            component[3] = "Resistors";
            component[4] = "CRTs";
            component[5] = "Motor";
            component[6] = "LEDs";
            
        }
        
        if(componentType.equalsIgnoreCase("Electronic glass and chips waste"))
        {
            component[0] = "Screen monitor";
            component[1] = "Main Frames";
            component[2] = "CRT Monitor";
            component[3] = "Hard Drives";
            component[4] = "Batteries";
        }
        return component;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTestingDepartment = new javax.swing.JLabel();
        lblCategory = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox<>();
        lblComponentTech = new javax.swing.JLabel();
        lblComponent = new javax.swing.JLabel();
        cmbComponent = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeRegion = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        btnDispose = new javax.swing.JButton();
        txtDisposalTech = new javax.swing.JTextField();

        lblTestingDepartment.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTestingDepartment.setText("Disposal Department");

        lblCategory.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblCategory.setText("Category :");

        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plastic waste", "Printed Circuit", "Liquid waste", "Electronic glass and chips waste" }));
        cmbCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCategoryItemStateChanged(evt);
            }
        });

        lblComponentTech.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblComponentTech.setText("Disposal Technique : ");

        lblComponent.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblComponent.setText("Component :");

        cmbComponent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbComponentActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(treeRegion);

        jLabel1.setText("Region");

        btnDispose.setText("Dispose");
        btnDispose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisposeActionPerformed(evt);
            }
        });

        txtDisposalTech.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(lblTestingDepartment))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(143, 143, 143)
                                .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblComponent, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblComponentTech, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbComponent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                        .addComponent(btnDispose))
                                    .addComponent(txtDisposalTech))))))
                .addContainerGap(244, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDispose)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTestingDepartment)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCategory)
                            .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblComponent)
                            .addComponent(cmbComponent, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblComponentTech)
                            .addComponent(txtDisposalTech, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbComponentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbComponentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbComponentActionPerformed

    private void cmbCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCategoryItemStateChanged
        String selectedCategory= this.cmbCategory.getSelectedItem().toString();
               if(evt.getStateChange() == ItemEvent.SELECTED)
       {
           if(this.cmbCategory.getSelectedIndex()>0)
           {
               this.cmbComponent.setModel(new DefaultComboBoxModel(this.getComponent(selectedCategory)));
           }
       }
	   String tech=null;
       if (selectedCategory.equals("Plastic waste")){
            tech = "Landfill";   
       } else if (selectedCategory.equals("Liquid waste")) {
           tech = "Acid Bath";
       } else if (selectedCategory.equals("Printed Circuit")) {
           tech = "Incineration"; 
       } else {
           tech = "Hybrid Technique";
       }
       txtDisposalTech.setText(tech);

    }//GEN-LAST:event_cmbCategoryItemStateChanged

    private void btnDisposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisposeActionPerformed
        // TODO add your handling code here:
//        ArrayList<AirPollutionSensor> airPollutionSensors = network.getRegionNode().getRegion().getAirPollutionSensors();
//        ArrayList<WaterPollutionSensor> waterPollutionSensors = network.getRegionNode().getRegion().getWaterPollutionSensors();
        
        RegionNode selectedNode = (RegionNode) treeRegion.getLastSelectedPathComponent();
        
        if (selectedNode == null){
            JOptionPane.showMessageDialog(this, "Please select a Region for disposal");
            return;
        }
        boolean isWaterPolluted = isWaterPollution(selectedNode);
        boolean isAirPolluted = isAirPollution(selectedNode);
        
        if(!isWaterPolluted && !isAirPolluted){
            JOptionPane.showMessageDialog(this, "Disposed successfuully");
            disposalrequest.setStatus(Constant.COMPLETE);
            userProcessContainer.remove(this);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        }else{
            JOptionPane.showMessageDialog(this, "Cannot be dispose in this region as the region is highly polluted");
        } 
    }//GEN-LAST:event_btnDisposeActionPerformed

    public boolean isWaterPollution(RegionNode regionNode){
        for(WaterPollutionSensor wps : regionNode.getRegion().getWaterPollutionSensors()){
            if(wps.getPollutionLevel() > Constant.WATER_POLLUTION_THRESHOLD){
                return true;
            }
        }
        return false;
    }
    
    public boolean isAirPollution(RegionNode regionNode){
        for(AirPollutionSensor wps : regionNode.getRegion().getAirPollutionSensors()){
            if(wps.getPollutionLevel() > Constant.AIR_POLLUTION_THRESHOLD){
                return true;
            }
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDispose;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JComboBox<String> cmbComponent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblComponent;
    private javax.swing.JLabel lblComponentTech;
    private javax.swing.JLabel lblTestingDepartment;
    private javax.swing.JTree treeRegion;
    private javax.swing.JTextField txtDisposalTech;
    // End of variables declaration//GEN-END:variables
}
